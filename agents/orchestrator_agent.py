"""
Agente Orquestrador - √önico agente com todas as ferramentas especializadas
"""

import logging
from typing import Dict, Any, Optional, List
import re
from datetime import datetime

# Importar framework Agno
from agno.agent import Agent
from agno.models.google import Gemini
from agno.storage.sqlite import SqliteStorage

# Importar todas as ferramentas especializadas
from agno.tools.duckduckgo import DuckDuckGoTools
from agno.tools.yfinance import YFinanceTools
from tools.code_tools import CodeAnalysisTools
from tools.data_tools import DataAnalysisTools

from config.settings import get_storage_path

logger = logging.getLogger(__name__)

def create_orchestrator_agent() -> Agent:
    """Cria um agente √∫nico com todas as ferramentas especializadas."""
    
    # Inicializar todas as ferramentas
    code_tools = CodeAnalysisTools()
    data_tools = DataAnalysisTools()
    
    # Lista de todas as ferramentas dispon√≠veis
    all_tools = [
        # Ferramentas web e financeiras
        DuckDuckGoTools(),
        YFinanceTools(
            stock_price=True, 
            analyst_recommendations=True, 
            company_info=True, 
            company_news=True
        ),
        # Ferramentas de c√≥digo
        code_tools.analyze_python_file,
        code_tools.check_code_style,
        code_tools.generate_docstring,
        # Ferramentas de dados
        data_tools.load_csv,
        data_tools.create_visualization,
        data_tools.statistical_summary,
        data_tools.correlation_analysis
    ]
    
    # Retornar agente Agno com todas as ferramentas
    return Agent(
        name="Assistente IA",
        model=Gemini(id="gemini-1.5-pro"),
        tools=all_tools,
        instructions=[
            "Voc√™ √© um assistente de IA avan√ßado e vers√°til com acesso a m√∫ltiplas ferramentas especializadas.",
            "",
            "üåê PESQUISAS WEB:",
            "- Use DuckDuckGo para pesquisar informa√ß√µes atuais, not√≠cias, e conhecimento geral",
            "- Sempre forne√ßa fontes e informa√ß√µes atualizadas",
            "",
            "üí∞ AN√ÅLISE FINANCEIRA:",
            "- Use Yahoo Finance para cota√ß√µes, pre√ßos de a√ß√µes, dados de mercado",
            "- Forne√ßa an√°lises detalhadas e use tabelas para organizar dados financeiros",
            "",
            "üíª AN√ÅLISE DE C√ìDIGO:",
            "- Use as ferramentas de c√≥digo para analisar arquivos Python",
            "- Verifique estilo, gere documenta√ß√£o, e forne√ßa sugest√µes de melhoria",
            "",
            "üìä AN√ÅLISE DE DADOS:",
            "- Use as ferramentas de dados para processar CSV e criar visualiza√ß√µes",
            "- Forne√ßa estat√≠sticas descritivas e an√°lises de correla√ß√£o",
            "",
            "üéØ SELE√á√ÉO AUTOM√ÅTICA:",
            "Para cada pergunta, identifique automaticamente qual tipo de ferramenta usar:",
            "- Perguntas sobre not√≠cias, informa√ß√µes gerais ‚Üí DuckDuckGo",
            "- Perguntas sobre a√ß√µes, pre√ßos, mercado ‚Üí Yahoo Finance",
            "- Perguntas sobre c√≥digo Python ‚Üí Ferramentas de c√≥digo",
            "- Perguntas sobre dados, CSV, gr√°ficos ‚Üí Ferramentas de dados",
            "- Para outras perguntas ‚Üí Use seu conhecimento base",
            "",
            "Sempre use as ferramentas de forma natural e transparente.",
            "N√£o mencione qual ferramenta espec√≠fica voc√™ est√° usando.",
            "Forne√ßa respostas precisas, √∫teis e bem fundamentadas."
        ],
        storage=SqliteStorage(
            table_name="orchestrator_agent", 
            db_file=get_storage_path("agents.db")
        ),
        add_datetime_to_instructions=True,
        add_history_to_messages=True,
        num_history_responses=5,
        markdown=True,
    )
